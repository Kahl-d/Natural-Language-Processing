Some of these, such as definition questions, or simple factoid questions like dates and locations, can already be answered by search engines. But answering more com- plicated questions might require extracting information that is embedded in other text on a Web page, doing inference (drawing conclusions based on known facts), or syn- thesizing and summarizing information from multiple sources or Web pages. In this text we study the various components that make up modern understanding systems of this kind, including information extraction, word sense disambiguation, and so on.
Although the subfields and problems weâ€™ve described above are all very far from completely solved, these are all very active research areas and many technologies are already available commercially. In the rest of this chapter, we briefly summarize the kinds of knowledge that are necessary for these tasks (and others like spelling cor- rection, grammar checking, and so on), as well as the mathematical models that are introduced throughout the book.
What distinguishes language processing applications from other data processing sys- tems is their use of knowledge of language. Consider the Unix wc program, which counts the total number of bytes, words, and lines in a text file. When used to count bytes and lines, wc is an ordinary data processing application. However, when it is used to count the words in a file, it requires knowledge about what it means to be a word and thus becomes a language processing system.
Of course, wc is an extremely simple system with an extremely limited and impov- erished knowledge of language. Sophisticated conversational agents like HAL, ma- chine translation systems, or robust question-answering systems require much broader and deeper knowledge of language. To get a feeling for the scope and kind of required knowledge, consider some of what HAL would need to know to engage in the dia- logue that begins this chapter, or for a question-answering system to answer one of the questions above.